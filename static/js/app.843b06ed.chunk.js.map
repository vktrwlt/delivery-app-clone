{"version":3,"sources":["src/components/CategoryCard.js","sanity.js","src/components/Categories.js","src/components/RestaurantCard.js","src/components/FeaturedRow.js","src/screens/HomeScreen.js","src/slice/basketSlice.js","src/components/DishRow.js","src/components/BasketIcon.js","src/slice/restaurantSlice.js","src/screens/RestaurantScreen.js","src/store.js","src/screens/BasketScreen.js","src/screens/PreparingOrderScreen.js","src/screens/DeliveryScreen.js","App.js","assets/orderLoading.gif"],"names":["CategoryCard","imgUrl","title","className","source","url","client","sanityClient","projectId","dataset","useCdn","apiVersion","builder","imageUrlBuilder","urlFor","image","Categories","useState","categories","setCategories","useEffect","fetch","then","data","ScrollView","horizontal","showsHorizontalScrollIndicator","contentContainerStyle","paddingHorizontal","paddingTop","map","category","width","name","_id","RestaurantCard","id","rating","genre","address","short_description","dishes","long","lat","navigation","useNavigation","onPress","navigate","uri","color","opacity","size","FeaturedRow","description","restaurants","setRestaurants","View","restaurant","type","HomeScreen","featuredCategories","setFeaturedCategories","useLayoutEffect","setOptions","headerShown","TextInput","placeholder","keyboardType","paddingBottom","basketSlice","createSlice","initialState","items","reducers","addToBasket","state","action","payload","removeFromBasket","index","findIndex","item","newBasket","splice","console","warn","actions","selectBasketItems","basket","selectBasketTotal","reduce","total","price","DishRow","isPressed","setIsPressed","useSelector","filter","selectBasketItemsWithId","dispatch","useDispatch","quantity","currency","style","borderWidth","borderColor","TouchableOpacity","length","disabled","Text","BasketIcon","basketTotal","restaurantSlice","setRestaurant","selectRestaurant","RestaurantScreen","useRoute","params","goBack","dish","store","configureStore","reducer","basketReducer","restaurantReducer","BasketScreen","groupedItemsInBasket","setGroupedItemsInBasket","groupedItems","results","push","height","Object","entries","key","PreparingOrderScreen","setTimeout","require","animation","iterationCount","indeterminate","DeliveryScreen","initialRegion","latitude","longitude","latitudeDelta","longitudeDelta","coordinate","identifier","pinColor","Stack","createNativeStackNavigator","App","NavigationContainer","Navigator","Screen","component","options","presentation","StatusBar","module","exports"],"mappings":"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","file":"static/js/app.843b06ed.chunk.js","sourcesContent":["import { View, Text, Image, TouchableOpacity } from \"react-native\";\nimport React from \"react\";\n\nconst CategoryCard = ({ imgUrl, title }) => {\n  return (\n    <TouchableOpacity className=\"relative mr-2\">\n      <Image source={{ url: imgUrl }} className=\"h-20 w-20 rounded\" />\n      <Text className=\"absolute bottom-1 left-1 text-white font-bold\">\n        {title}\n      </Text>\n    </TouchableOpacity>\n  );\n};\n\nexport default CategoryCard;\n","import sanityClient from \"@sanity/client\";\nimport imageUrlBuilder from \"@sanity/image-url\";\n\nconst client = sanityClient({\n  projectId: \"qwoxusny\",\n  dataset: \"production\",\n  useCdn: true,\n  apiVersion: \"2021-10-21\",\n});\n\nconst builder = imageUrlBuilder(client);\n\nexport const urlFor = (source) => builder.image(source);\n\n// ran this to add exception for localhost 19006 CORS policy\n// sanity cors add http://localhost:19006\n\nexport default client;\n","import { View, Text, ScrollView } from \"react-native\";\nimport React, { useState, useEffect } from \"react\";\nimport CategoryCard from \"./CategoryCard\";\nimport client, { urlFor } from \"../../sanity\";\n\nconst Categories = () => {\n  const [categories, setCategories] = useState([]);\n\n  useEffect(() => {\n    client.fetch(`*[_type == \"category\"]`).then((data) => {\n      setCategories(data);\n    });\n  }, []);\n\n  return (\n    <ScrollView\n      horizontal\n      showsHorizontalScrollIndicator={false}\n      contentContainerStyle={{ paddingHorizontal: 15, paddingTop: 10 }}\n    >\n      {/* category card */}\n      {categories?.map((category) => (\n        <CategoryCard\n          key={category._id}\n          imgUrl={urlFor(category.image).width(200).url()}\n          title={category.name}\n        />\n      ))}\n    </ScrollView>\n  );\n};\n\nexport default Categories;\n","import { View, Text, TouchableOpacity, Image } from \"react-native\";\nimport React from \"react\";\nimport { StarIcon } from \"react-native-heroicons/solid\";\nimport { LocationMarkerIcon } from \"react-native-heroicons/outline\";\nimport { urlFor } from \"../../sanity\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst RestaurantCard = ({\n  id,\n  imgUrl,\n  title,\n  rating,\n  genre,\n  address,\n  short_description,\n  dishes,\n  long,\n  lat,\n}) => {\n  const navigation = useNavigation();\n\n  return (\n    <TouchableOpacity\n      className=\"bg-white mr-3 shadow\"\n      onPress={() => {\n        navigation.navigate(\"Restaurant\", {\n          id,\n          imgUrl,\n          title,\n          rating,\n          genre,\n          address,\n          short_description,\n          dishes,\n          long,\n          lat,\n        });\n      }}\n    >\n      <Image\n        source={{ uri: urlFor(imgUrl).url() }}\n        className=\"h-36 w-64 rounded\"\n      />\n      <View className=\"px-3 pb-4\">\n        <Text className=\"font-bold text-lg pt-2\">{title}</Text>\n        <View className=\"flex-row items-center space-x-1\">\n          <StarIcon color=\"green\" opacity={0.5} size={22} />\n          <Text className=\"text-gray-500 text-xs\">\n            <Text className=\"text-green-500\"> {rating}</Text> - {genre}\n          </Text>\n        </View>\n        <View className=\"flex-row items-center space-x-1\">\n          <LocationMarkerIcon color=\"gray\" opacity={0.4} size={22} />\n          <Text className=\"text-xs text-gray-500\">Nearby {address}</Text>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default RestaurantCard;\n","import { View, Text, ScrollView } from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport { ArrowRightIcon } from \"react-native-heroicons/outline\";\nimport RestaurantCard from \"./RestaurantCard\";\nimport client from \"../../sanity\";\n\nconst FeaturedRow = ({ title, description, id }) => {\n  const [restaurants, setRestaurants] = useState([]);\n  useEffect(() => {\n    client\n      .fetch(\n        `\n          *[_type == \"featured\" && _id == $id] {\n            ...,\n            restaurants[]->{\n              ...,\n              dishes[]->,\n              type->{\n                name\n              }\n            }\n          }[0]\n          `,\n        { id }\n      )\n      .then((data) => {\n        setRestaurants(data?.restaurants);\n      });\n  }, [id]);\n\n  return (\n    <View>\n      <View className=\"mt-4 flex-row space-x-2 items-center justify-between px-4\">\n        <Text className=\"font-bold text-lg\">{title}</Text>\n        <ArrowRightIcon color=\"#00CCBB\" />\n      </View>\n      <Text className=\"text-gray-500 text-xs px-4\">{description}</Text>\n      <ScrollView\n        horizontal\n        contentContainerStyle={{ paddingHorizontal: 15 }}\n        showsHorizontalScrollIndicator={false}\n        className=\"pt-4\"\n      >\n        {/* RestaurantCards */}\n\n        {restaurants.map((restaurant) => (\n          <RestaurantCard\n            key={restaurant._id}\n            id={restaurant._id}\n            imgUrl={restaurant.image}\n            address={restaurant.address}\n            title={restaurant.name}\n            dishes={restaurant.dishes}\n            rating={restaurant.rating}\n            short_description={restaurant.short_description}\n            genre={restaurant.type?.name}\n            long={restaurant.long}\n            lat={restaurant.lat}\n          />\n        ))}\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default FeaturedRow;\n","import React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  SafeAreaView,\n  Image,\n  TextInput,\n  ScrollView,\n} from \"react-native\";\nimport {\n  ChevronDownIcon,\n  UserIcon,\n  SearchIcon,\n  AdjustmentsIcon,\n} from \"react-native-heroicons/outline\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Categories from \"../components/Categories\";\nimport FeaturedRow from \"../components/FeaturedRow\";\nimport client from \"../../sanity\";\n\nconst HomeScreen = () => {\n  const navigation = useNavigation();\n\n  const [featuredCategories, setFeaturedCategories] = useState([]);\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerShown: false,\n    });\n  }, []);\n\n  useEffect(() => {\n    client\n      .fetch(\n        `\n          *[_type == \"featured\"] {\n            ...,\n            restaurants[]->{\n              ...,\n              dishes[]->\n            }\n          }\n          `\n      )\n      .then((data) => {\n        setFeaturedCategories(data);\n      });\n  }, []);\n\n  return (\n    <SafeAreaView className=\"bg-white pt-5 \">\n      {/* Header */}\n      <View className=\"flex-row pb-3 items-center mx-4 space-x-2\">\n        <Image\n          source={{ uri: \"https://links.papareact.com/wru\" }}\n          className=\"h-7 w-7 bg-gray-300 p-4 rounded-full\"\n        />\n        <View className=\"flex-1\">\n          <Text className=\"font-bold text-gray-400 text-xs\">Delivery Now!</Text>\n          <Text className=\"font-bold text-xl\">\n            Current Location\n            <ChevronDownIcon size=\"20\" color=\"#00CCBB\" />\n          </Text>\n        </View>\n        <UserIcon size=\"35\" color=\"#00CCBB\" />\n      </View>\n      {/* Search */}\n      <View className=\"mx-4 flex-row items-center space-x-2 pb-2\">\n        <View className=\"flex-row space-x-2 flex-1 bg-gray-200 p-3\">\n          <SearchIcon color=\"gray\" size=\"20\" />\n          <TextInput\n            placeholder=\"Restaurants and cuisines\"\n            keyboardType=\"default\"\n          />\n        </View>\n        <AdjustmentsIcon color=\"#00CCBB\" />\n      </View>\n      {/* body */}\n      <ScrollView\n        className=\"bg-gray-100\"\n        contentContainerStyle={{ paddingBottom: 100 }}\n      >\n        {/* Categories */}\n        <Categories />\n        {/* Featured row */}\n        {featuredCategories?.map((categories) => (\n          <FeaturedRow\n            key={categories._id}\n            id={categories._id}\n            title={categories.name}\n            description={categories.short_description}\n          />\n        ))}\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nexport default HomeScreen;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  items: [],\n};\n\nexport const basketSlice = createSlice({\n  name: \"basket\",\n  initialState,\n  reducers: {\n    addToBasket: (state, action) => {\n      state.items = [...state.items, action.payload];\n    },\n    removeFromBasket: (state, action) => {\n      // Get the first index of item  in the array, if any\n      const index = state.items.findIndex(\n        (item) => item.id === action.payload.id\n      );\n      let newBasket = [...state.items];\n\n      if (index >= 0) {\n        // remove item at that position\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(\n          `Cant remove product (id: ${action.payload.id}) as its not in basket!`\n        );\n      }\n      state.items = newBasket;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { addToBasket, removeFromBasket } = basketSlice.actions;\n\nexport const selectBasketItems = (state) => state.basket.items;\nexport const selectBasketItemsWithId = (state, id) =>\n  state.basket.items.filter((item) => item.id === id);\n\nexport const selectBasketTotal = (state) =>\n  state.basket.items.reduce((total, item) => (total += item.price), 0);\n\nexport default basketSlice.reducer;\n","import { View, Text, TouchableOpacity, Image } from \"react-native\";\nimport React, { useState } from \"react\";\nimport Currency from \"react-currency-formatter\";\nimport { urlFor } from \"../../sanity\";\nimport { MinusCircleIcon, PlusCircleIcon } from \"react-native-heroicons/solid\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  addToBasket,\n  removeFromBasket,\n  selectBasketItemsWithId,\n} from \"../slice/basketSlice\";\n\nconst DishRow = ({ id, name, description, price, image }) => {\n  const [isPressed, setIsPressed] = useState(false);\n  const items = useSelector((state) => selectBasketItemsWithId(state, id));\n  const dispatch = useDispatch();\n  const addItemToBasket = () => {\n    dispatch(addToBasket({ id, name, description, price, image }));\n  };\n  const removeItemFromBasket = () => {\n    if (!items.length > 0) return;\n    dispatch(removeFromBasket({ id }));\n  };\n  return (\n    <>\n      <TouchableOpacity\n        onPress={() => setIsPressed(!isPressed)}\n        className={`bg-white border py-4 px-6 border-gray-200 ${\n          isPressed && \"border-b-0\"\n        }`}\n      >\n        <View className=\"flex-row justify-evenly\">\n          <View className=\"flex-1 pr-2\">\n            <Text className=\"text-lg mb-1\">{name}</Text>\n            <Text className=\"text-gray-400\">{description}</Text>\n            <Text className=\"text-gray-400 mt-2\">\n              <Currency quantity={price} currency=\"USD\" />\n            </Text>\n          </View>\n\n          <View>\n            <Image\n              style={{ borderWidth: 1, borderColor: \"#F3F3F4\" }}\n              source={{ uri: urlFor(image).url() }}\n              className=\"h-20 w-20 bg-gray-300 p-4\"\n            />\n          </View>\n        </View>\n      </TouchableOpacity>\n      {isPressed && (\n        <View className=\"bg-white px-4\">\n          <View className=\"flex-row items-center space-x-2 pb-3\">\n            <TouchableOpacity\n              onPress={removeItemFromBasket}\n              disabled={!items.length}\n            >\n              <MinusCircleIcon\n                color={items.length > 0 ? \"#00CCBB\" : \"gray\"}\n                size=\"40\"\n              />\n            </TouchableOpacity>\n            <Text>{items.length}</Text>\n            <TouchableOpacity onPress={addItemToBasket}>\n              <PlusCircleIcon color=\"#00CCBB\" size=\"40\" />\n            </TouchableOpacity>\n          </View>\n        </View>\n      )}\n    </>\n  );\n};\n\nexport default DishRow;\n","import { View, Text, TouchableOpacity } from \"react-native\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectBasketItems, selectBasketTotal } from \"../slice/basketSlice\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Currency from \"react-currency-formatter\";\n\nconst BasketIcon = () => {\n  const items = useSelector(selectBasketItems);\n  const navigation = useNavigation();\n  const basketTotal = useSelector(selectBasketTotal);\n\n  if (items.length === 0) return null;\n\n  return (\n    <View className=\"absolute bottom-10 w-full z-50\">\n      <TouchableOpacity\n        onPress={() => navigation.navigate(\"Basket\")}\n        className=\"bg-[#00CCBB] mx-5 p-4 rounded-lg flex-row items-center space-x-1\"\n      >\n        <Text className=\"text-white font-extrabold text-lg bg-[#01A296] py-1 px-2\">\n          {items.length}\n        </Text>\n        <Text className=\"flex-1 text-lg text-center text-white font-extrabold\">\n          View Basket\n        </Text>\n        <Text className=\"text-lg text-white font-extrabold\">\n          <Currency quantity={basketTotal} currency=\"USD\" />\n        </Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport default BasketIcon;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  restaurant: {\n    id: null,\n    imgUrl: null,\n    title: null,\n    rating: null,\n    genre: null,\n    address: null,\n    short_description: null,\n    dishes: null,\n  },\n};\n\nexport const restaurantSlice = createSlice({\n  name: \"restaurant\",\n  initialState,\n  reducers: {\n    setRestaurant: (state, action) => {\n      state.restaurant = action.payload;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { setRestaurant } = restaurantSlice.actions;\n\nexport const selectRestaurant = (state) => state.restaurant.restaurant;\n\nexport default restaurantSlice.reducer;\n","import { View, Text, ScrollView, Image, TouchableOpacity } from \"react-native\";\nimport React, { useLayoutEffect, useEffect } from \"react\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport { urlFor } from \"../../sanity\";\nimport {\n  ArrowLeftIcon,\n  ChevronRightIcon,\n  StarIcon,\n} from \"react-native-heroicons/solid\";\nimport {\n  LocationMarkerIcon,\n  QuestionMarkCircleIcon,\n} from \"react-native-heroicons/outline\";\nimport DishRow from \"../components/DishRow\";\nimport BasketIcon from \"../components/BasketIcon\";\nimport { useDispatch } from \"react-redux\";\nimport { setRestaurant } from \"../slice/restaurantSlice\";\n\nconst RestaurantScreen = () => {\n  const navigation = useNavigation();\n  const dispatch = useDispatch();\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerShown: false,\n    });\n  }, []);\n\n  const {\n    params: {\n      id,\n      imgUrl,\n      title,\n      rating,\n      genre,\n      address,\n      short_description,\n      dishes,\n      long,\n      lat,\n    },\n  } = useRoute();\n\n  useEffect(() => {\n    dispatch(\n      setRestaurant({\n        id,\n        imgUrl,\n        title,\n        rating,\n        genre,\n        address,\n        short_description,\n        dishes,\n        long,\n        lat,\n      })\n    );\n  }, [dispatch]);\n\n  return (\n    <>\n      <BasketIcon />\n      <ScrollView>\n        <View className=\"relative\">\n          <Image\n            source={{ uri: urlFor(imgUrl).url() }}\n            className=\"h-56 w-full bg-gray-300 p-4\"\n          />\n        </View>\n        <TouchableOpacity\n          className=\"absolute top-14 left-5 p-2 bg-gray-100 rounded-full\"\n          onPress={navigation.goBack}\n        >\n          <ArrowLeftIcon size=\"20\" color=\"#00CCBB\" />\n        </TouchableOpacity>\n\n        <View className=\"bg-white\">\n          <View className=\"px-4 pt-4\">\n            <Text className=\"text-3xl font-bold\">{title}</Text>\n            <View className=\"flex-row space-x-2 my-1\">\n              <View className=\"flex-row items-center space-x-1\">\n                <StarIcon color=\"green\" opacity={0.5} size={22} />\n                <Text className=\"text-gray-500 text-xs\">\n                  <Text className=\"text-green-500\"> {rating}</Text> - {genre}\n                </Text>\n              </View>\n              <View className=\"flex-row items-center space-x-1\">\n                <LocationMarkerIcon color=\"gray\" opacity={0.4} size={22} />\n                <Text className=\"text-xs text-gray-500\">Nearby {address}</Text>\n              </View>\n            </View>\n            <Text className=\"text-gray-500 mt-2 pb-4\">{short_description}</Text>\n          </View>\n          <TouchableOpacity className=\"flex-row items-center space-x-2 p-4 border-y border-gray-300\">\n            <QuestionMarkCircleIcon color=\"gray\" opacity={0.5} size={20} />\n            <Text className=\"pl-2 flex-1 text-md font-bold\">\n              Have a food allergy?\n            </Text>\n            <ChevronRightIcon color=\"#00CCBB\" />\n          </TouchableOpacity>\n        </View>\n        <View className=\"pb-36\">\n          <Text className=\"px-2 pt-6 m-3 font-bold text-xl \">Menu</Text>\n          {/* Dishrows */}\n          {dishes?.map((dish) => (\n            <DishRow\n              key={dish._id}\n              id={dish._id}\n              name={dish.name}\n              description={dish.short_description}\n              price={dish.price}\n              image={dish.image}\n            />\n          ))}\n        </View>\n      </ScrollView>\n    </>\n  );\n};\n\nexport default RestaurantScreen;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport basketReducer from \"./slice/basketSlice\";\nimport restaurantReducer from \"./slice/restaurantSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    basket: basketReducer,\n    restaurant: restaurantReducer,\n  },\n});\n","import {\n  View,\n  Text,\n  SafeAreaView,\n  TouchableOpacity,\n  Image,\n  ScrollView,\n} from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectRestaurant } from \"../slice/restaurantSlice\";\nimport {\n  selectBasketItems,\n  removeFromBasket,\n  selectBasketTotal,\n} from \"../slice/basketSlice\";\nimport { XCircleIcon } from \"react-native-heroicons/solid\";\nimport { urlFor } from \"../../sanity\";\nimport Currency from \"react-currency-formatter\";\n\nconst BasketScreen = () => {\n  const navigation = useNavigation();\n  const restaurant = useSelector(selectRestaurant);\n  const items = useSelector(selectBasketItems);\n  const basketTotal = useSelector(selectBasketTotal);\n  const [groupedItemsInBasket, setGroupedItemsInBasket] = useState([]);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const groupedItems = items.reduce((results, item) => {\n      (results[item.id] = results[item.id] || []).push(item);\n      return results;\n    }, {});\n    setGroupedItemsInBasket(groupedItems);\n  }, [items]);\n\n  return (\n    <SafeAreaView className=\"flex-1 bg-white\">\n      <View className=\"flex-1 bg-gray-100\">\n        <View className=\"p-5 border-b border-[#00CCBB] bg-white shadow-xs\">\n          <View>\n            <Text className=\"text-lg font-bold text-center\">Basket</Text>\n            <Text className=\"text-center text-gray-400\">\n              {restaurant.title}\n            </Text>\n          </View>\n          <TouchableOpacity\n            onPress={navigation.goBack}\n            className=\"rounded-full bg-gray-100 absolute top-3 right-5\"\n          >\n            <XCircleIcon color={\"#00CCBB\"} height={50} width={50} />\n          </TouchableOpacity>\n        </View>\n        <View className=\"flex-row items-center space-x-4 px-4 py-3 bg-white my-5\">\n          <Image\n            source={{ uri: \"https://links.papareact.com/wru\" }}\n            className=\"h-7 w-9 bg-gray-300 p-4 rounded-full\"\n          />\n          <Text className=\"flex-1\">Deliver in 50-75 minutes</Text>\n          <TouchableOpacity>\n            <Text className=\"text-[#00CCBB]\">Change</Text>\n          </TouchableOpacity>\n        </View>\n        <ScrollView className=\"divide-y divide-gray-200\">\n          {Object.entries(groupedItemsInBasket).map(([key, items]) => (\n            <View\n              key={key}\n              className=\"flex-row items-center space-x-3 bg-white py-2 px-5\"\n            >\n              <Text className=\"text-[#00CCBB]\">{items.length} x</Text>\n              <Image\n                source={{ url: urlFor(items[0]?.image).url() }}\n                className=\"h-12 w-12 rounded-full\"\n              />\n              <Text className=\"flex-1\">{items[0]?.name}</Text>\n              <Text className=\"text-gray-600\">\n                <Currency quantity={items[0]?.price} currency=\"USD\" />\n              </Text>\n              <TouchableOpacity>\n                <Text\n                  className=\"text-[#00CCBB] text-xs\"\n                  onPress={() => dispatch(removeFromBasket({ id: key }))}\n                >\n                  Remove\n                </Text>\n              </TouchableOpacity>\n            </View>\n          ))}\n        </ScrollView>\n        <View className=\"p-4 bg-white mt-5 space-y-4\">\n          <View className=\"flex-row justify-between\">\n            <Text className=\"text-gray-400\">Subtotal</Text>\n            <Text className=\"text-gray-400\">\n              <Currency quantity={basketTotal} currency=\"USD\" />\n            </Text>\n          </View>\n          <View className=\"flex-row justify-between\">\n            <Text className=\"text-gray-400\">Delivery Fee</Text>\n            <Text className=\"text-gray-400\">\n              <Currency quantity={5.99} currency=\"USD\" />\n            </Text>\n          </View>\n          <View className=\"flex-row justify-between\">\n            <Text>Order Total</Text>\n            <Text className=\"font-extrabold \">\n              <Currency quantity={basketTotal + 5.99} currency=\"USD\" />\n            </Text>\n          </View>\n          <TouchableOpacity\n            className=\"rounded-lg bg-[#00CCBB] p-4\"\n            onPress={() => navigation.navigate(\"PreparingOrderScreen\")}\n          >\n            <Text className=\"text-center text-white text-lg font-bold\">\n              Place Order\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nexport default BasketScreen;\n","import { View, Text, SafeAreaView } from \"react-native\";\nimport React, { useEffect } from \"react\";\nimport * as Animatable from \"react-native-animatable\";\nimport * as Progress from \"react-native-progress\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst PreparingOrderScreen = () => {\n  const navigation = useNavigation();\n\n  useEffect(() => {\n    setTimeout(() => {\n      navigation.navigate(\"Delivery\");\n    }, 2000);\n  }, []);\n\n  return (\n    <SafeAreaView className=\"bg-[#00CCBB] flex-1 justify-center items-center\">\n      <Animatable.Image\n        source={require(\"../../assets/orderLoading.gif\")}\n        animation=\"slideInUp\"\n        iterationCount={1}\n        className=\"h-96 w-96\"\n      />\n      <Animatable.Text\n        animation=\"slideInUp\"\n        iterationCount={1}\n        className=\"text-md my-10 text-white font-bold text-center\"\n      >\n        Waiting for Restaurant to accept your order!\n      </Animatable.Text>\n      <Progress.Circle size={60} indeterminate={true} color=\"white\" />\n    </SafeAreaView>\n  );\n};\n\nexport default PreparingOrderScreen;\n","import {\n  View,\n  Text,\n  SafeAreaView,\n  TouchableOpacity,\n  Image,\n} from \"react-native\";\nimport React from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useSelector } from \"react-redux\";\nimport { selectRestaurant } from \"../slice/restaurantSlice\";\nimport { XIcon } from \"react-native-heroicons/solid\";\nimport * as Progress from \"react-native-progress\";\n\nimport MapView, { Marker } from \"react-native-maps\";\n\nconst DeliveryScreen = () => {\n  const navigation = useNavigation();\n  const restaurant = useSelector(selectRestaurant);\n  return (\n    <View className=\"bg-[#00CCBB] flex-1\">\n      <SafeAreaView className=\"z-50\">\n        <View className=\"flex-row justify-between items-center p-5\">\n          <TouchableOpacity>\n            <XIcon\n              color=\"white\"\n              size={30}\n              onPress={() => navigation.navigate(\"Home\")}\n            />\n          </TouchableOpacity>\n          <Text className=\"font-light text-white text-lg\">Order Help</Text>\n        </View>\n        <View className=\"bg-white mx-5 my-2 rounded-md p-6  z-50 shadow-md\">\n          <View className=\"flex-row justify-between\">\n            <View>\n              <Text className=\"text-lg text-gray-400\">Estimated Arrival</Text>\n              <Text className=\"text-4xl font-bold\">45-55 Minutes</Text>\n            </View>\n            <Image\n              className=\"h-20 w-20\"\n              source={{ url: \"https://links.papareact.com/fls\" }}\n            />\n          </View>\n          <Progress.Bar size={60} indeterminate={true} color=\"#00CCBB\" />\n          <Text className=\"mt-4 text-gray-500\">\n            Your order at {restaurant.title} is being prepared\n          </Text>\n        </View>\n      </SafeAreaView>\n      <MapView\n        initialRegion={{\n          latitude: restaurant.lat,\n          longitude: restaurant.long,\n          latitudeDelta: 0.005,\n          longitudeDelta: 0.005,\n        }}\n        className=\"flex-1 -mt-10 z-0\"\n      >\n        <Marker\n          coordinate={{\n            latitude: restaurant.lat,\n            longitude: restaurant.long,\n          }}\n          title={restaurant.title}\n          description={restaurant.short_description}\n          identifier=\"origin\"\n          pinColor=\"#00CCBB\"\n        />\n      </MapView>\n      <SafeAreaView className=\"bg-white flex-row items-center space-x-5 h-28\">\n        <Image\n          source={{ url: \"https://links.papareact.com/wru\" }}\n          className=\"h-12 w-12 bg-gray-300 p-4 rounded-full ml-5\"\n        />\n        <View className=\"flex-1\">\n          <Text className=\"text-lg\">Johnny Rocket</Text>\n          <Text className=\"text-gray-400\">Driver</Text>\n        </View>\n        <Text className=\"text-[#00CCBB] text-lg mr-5 font-bold\">Call</Text>\n      </SafeAreaView>\n    </View>\n  );\n};\n\nexport default DeliveryScreen;\n","import { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { TailwindProvider } from \"tailwindcss-react-native\";\nimport HomeScreen from \"./src/screens/HomeScreen\";\nimport RestaurantScreen from \"./src/screens/RestaurantScreen\";\nimport { store } from \"./src/store\";\nimport { Provider } from \"react-redux\";\nimport BasketScreen from \"./src/screens/BasketScreen\";\nimport PreparingOrderScreen from \"./src/screens/PreparingOrderScreen\";\nimport DeliveryScreen from \"./src/screens/DeliveryScreen\";\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Provider store={store}>\n        <TailwindProvider>\n          <Stack.Navigator>\n            <Stack.Screen name=\"Home\" component={HomeScreen} />\n            <Stack.Screen name=\"Restaurant\" component={RestaurantScreen} />\n            <Stack.Screen\n              name=\"Basket\"\n              component={BasketScreen}\n              options={{ presentation: \"modal\", headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"PreparingOrderScreen\"\n              component={PreparingOrderScreen}\n              options={{ presentation: \"fullScreenModal\", headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"Delivery\"\n              component={DeliveryScreen}\n              options={{ presentation: \"fullScreenModal\", headerShown: false }}\n            />\n          </Stack.Navigator>\n          <StatusBar style=\"auto\" />\n        </TailwindProvider>\n      </Provider>\n    </NavigationContainer>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/media/orderLoading.82efa8e1.gif\";"],"sourceRoot":""}